[!
    # define a title to override the default in base.html
    sub title {
        return 'Product Detail Embperl Style';
    }

    # define a bread crumb string to override the default 
    # in base.html
    sub bread_crumb {
        return '/embperlproject/productfilter/:/productfilter/:productdetail';
    }
!]

[-
    use DBI;
 
    # connect to the database 
    $dbh = DBI->connect('DBI:mysql:product_database',
                        'apache','LampIsCool');

    # grab the posted data
    $prod_id = $fdat{prod_id} || '';

    # make sure the product id is what we expect and the
    # length is within expected limits
    unless ($prod_id =~ /^[\w]+$/) {
        $prod_id = '';
    }
    if (length($prod_id) > 4) {
        $prod_id = '';
    }
-]


<p><font color="#FF0000"><b>Product Detail Built with 
Embperl</b></font><br></p>
<p>This is the product detail for the MySQL project 
implemented with Embperl.
<hr>
<p></p>


[$ if ($prod_id) $]

  [# we have a good product id, so query the database and generate #]
  [# the output                                                    #]

  [-
      $sth = $dbh->prepare('SELECT products.name, products.category,
                                products.description,products.price,
                                manufacturers.name,
                                manufacturers.address,
                                manufacturers.city,
                                manufacturers.state,
                                manufacturers.zip,
                                manufacturers.man_id
                              FROM manufacturers, products
                              WHERE manufacturers.man_id = products.man_id
                                AND products.prod_id = ?
                              ORDER BY products.category, products.name');

      $sth->execute($prod_id);

      ($name,$category,$description,$price,$man_name,
       $address,$city,$state,$zip,$man_id) = $sth->fetchrow();
  -]

  [$ if ($name) $]

    [# $name has a value, so we have a record!  display it #]

<font color="#ff0000"><b>Product: [+ $prod_id +]</b></font><br>
<table border="0" cellspacing="0" cellpadding="0">
<tr><th align="left">Name</th><td>&nbsp;&nbsp;</td><td>
[+ $name +]</td></tr>
<tr><th align="left">Category</th><td>&nbsp;&nbsp;</td><td>
[+ $category +]</td></tr>
<tr><th align="left">Description</th><td>&nbsp;&nbsp;</td><td>
[+ $description +]</td></tr>
<tr><th align="left">Price</th><td>&nbsp;&nbsp;</td><td>
$[+ $price +]</td></tr>
<tr><th align="left"
valign="top">Manufacturer</th><td>&nbsp;&nbsp;</td><td>
ID: [+ $man_id +]<br>
[+ $man_name +]<br>
[+ $address +]<br>
[+ $city +], [+ $state +] [+ $zip +]
</td></tr>
</table>

  [$ else $]

    [# oops, the record wasn't in the database, so say so #]

Product ID <b>[+ $prod_id +]</b> not found in our database.

  [$ endif $]

[$ else $]

[# oops, the user didn't give us a good product id, so say so #]

Please enter a valid product ID.

[$ endif $]

<hr>
Click 
<a href="/embperlproject/productfilter/"><font
color="#999966"><b>here</b></font></a> 
to find another product.

